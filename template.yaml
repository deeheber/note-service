AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  apiAB3BF2FE:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${StackTagName} Environment ${EnvironmentTagName}
        - ResourceName: apiAB3BF2FE
      StageName: !Ref EnvironmentAPIGatewayStageName
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /note:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${list.Arn}/invocations
              responses: {}
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${create.Arn}/invocations
              responses: {}
          /note/{id}:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${get.Arn}/invocations
              responses: {}
            put:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${update.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
  list:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-list
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: list
      CodeUri: src/list
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref table5D44E44A
      Events:
        apiAB3BF2FEGETnote:
          Type: Api
          Properties:
            Path: /note
            Method: GET
            RestApiId: !Ref apiAB3BF2FE
      Environment:
        Variables:
          TABLE_NAME: !Ref table5D44E44A
          TABLE_ARN: !GetAtt table5D44E44A.Arn
    Metadata:
      StackeryName: list
  create:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-create
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: create
      CodeUri: src/create
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref table5D44E44A
      Events:
        apiAB3BF2FEPOSTnote:
          Type: Api
          Properties:
            Path: /note
            Method: POST
            RestApiId: !Ref apiAB3BF2FE
      Environment:
        Variables:
          TABLE_NAME: !Ref table5D44E44A
          TABLE_ARN: !GetAtt table5D44E44A.Arn
    Metadata:
      StackeryName: create
  table5D44E44A:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-table5D44E44A
    Metadata:
      StackeryName: notesTable
  get:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-get
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: get
      CodeUri: src/get
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref table5D44E44A
      Events:
        apiAB3BF2FEGETnoteid:
          Type: Api
          Properties:
            Path: /note/{id}
            Method: GET
            RestApiId: !Ref apiAB3BF2FE
      Environment:
        Variables:
          TABLE_NAME: !Ref table5D44E44A
          TABLE_ARN: !GetAtt table5D44E44A.Arn
    Metadata:
      StackeryName: get
  update:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-update
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: update
      CodeUri: src/update
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref table5D44E44A
      Events:
        apiAB3BF2FEPUTnoteid:
          Type: Api
          Properties:
            Path: /note/{id}
            Method: PUT
            RestApiId: !Ref apiAB3BF2FE
      Environment:
        Variables:
          TABLE_NAME: !Ref table5D44E44A
          TABLE_ARN: !GetAtt table5D44E44A.Arn
    Metadata:
      StackeryName: update
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvironmentAPIGatewayStageName:
    Type: String
    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)